!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports={Router:function({base:e="",routes:t=[]}={}){return{__proto__:new Proxy({},{get:(n,r,o)=>(n,...s)=>t.push([r.toUpperCase(),RegExp(`^${(e+n).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.").replace(/\)\.\?\(([^\[]+)\[\^/g,"?)\\.?($1(?<=\\.)[^\\.")}/*$`),s])&&o}),routes:t,async handle(e,...n){let r,o,s=new URL(e.url);for(var[a,i,l]of(e.query=Object.fromEntries(s.searchParams),t))if((a===e.method||"ALL"===a)&&(o=s.pathname.match(i)))for(var u of(e.params=o.groups,l))if(void 0!==(r=await u(e.proxy||e,...n)))return r}}}}},function(e,t,n){"use strict";n.r(t);var r=n(0);const o=Object(r.Router)();o.get("/",()=>new Response("Hello, world! This is the root page of your Worker template.")),o.get("/example/:text",async({params:e})=>{const t=decodeURIComponent(e.text);return new Response('<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMinYMin meet" viewBox="0 0 350 350"><style>.base { fill: white; font-family: serif; font-size: 14px; }</style><rect width="100%" height="100%" fill="black" /><text x="50%" y="50%" class="base" dominant-baseline="middle" text-anchor="middle">'+t+"</text></svg>",{headers:{"Content-Type":"image/svg+xml"}})}),o.post("/post",async e=>{let t={asn:e.cf.asn,colo:e.cf.colo};"application/json"===e.headers.get("Content-Type")&&(t.json=await e.json());const n=JSON.stringify(t,null,2);return new Response(n,{headers:{"Content-Type":"application/json"}})}),o.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(o.handle(e.request))})}]);